from qiskit import QuantumCircuit
import numpy as np
from qiskit.visualization import plot_histogram
from qiskit_aer import AerSimulator
from qiskit_aer.library import set_statevector
from qiskit import transpile
import qiskit.quantum_info as qi
from qiskit.quantum_info import Statevector
from qiskit.providers.basic_provider import BasicSimulator
from qiskit.circuit.library import QFT
from qiskit.circuit import Instruction
from qiskit.circuit import CircuitInstruction
simulator_basic = BasicSimulator()
simulator_aer=AerSimulator()
qc = QuantumCircuit(2)
qc.h(0)
qc.save_statevector()
qc.measure_all()
qc.draw('mpl')
qc_aer = transpile(qc, backend=simulator_aer)

result = simulator_aer.run(qc_aer).result()
qc_aer = transpile(qc, backend=simulator_aer)
result = simulator_aer.run(qc_aer).result()
pp=result.get_statevector()
qc_aer.measure_all()
print(qc_aer)
qc_aer.draw('mpl')
counts = result.get_counts()
print(counts)
